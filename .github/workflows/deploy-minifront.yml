name: Deploy Minifront

on:
  schedule:
    - cron: '0 */6 * * *'  # Runs at every 6th hour (4x a day)
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      # ========== Needed to build minifront ==========
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Setup wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
        with:
          version: 'latest'

      - name: Clone Penumbra Web repo
        run: git clone https://github.com/penumbra-zone/web

      - name: Install dependencies
        run: pnpm install
        working-directory: ./web
        env:
          NODE_OPTIONS: --max-old-space-size=4096 # Increase Node.js heap size given memory-intensive steps

      - name: Disable Turbo Telemetry
        run: pnpm turbo telemetry disable
        working-directory: ./web

      - name: Build Minifront
        run: pnpm turbo run build --filter=./apps/minifront --concurrency=1
        working-directory: ./web
        env:
          NODE_OPTIONS: --max-old-space-size=4096 # Increase Node.js heap size
      # ===============================================

      # ========== Netlify Deployment using CLI ==========
      - name: Install Netlify CLI
        run: npm install netlify-cli -g

      - name: Deploy to Netlify
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: |
          netlify deploy --dir=./web/apps/minifront/dist --prod
